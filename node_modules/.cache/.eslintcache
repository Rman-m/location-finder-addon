[{"/Users/arman/ip-prj/my-app/src/index.js":"1","/Users/arman/ip-prj/my-app/src/App.js":"2"},{"size":254,"mtime":1652203569551,"results":"3","hashOfConfig":"4"},{"size":1382,"mtime":1652382170481,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"1veruxa",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"/Users/arman/ip-prj/my-app/src/index.js",[],[],[],"/Users/arman/ip-prj/my-app/src/App.js",["14","15","16"],[],"/*global browser*/\n/*global url*/\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport loadingUrl from \"./img/loading.svg\";\nfunction App() {\n\tconst [urlData, setUrlData] = useState({});\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [tabUrl, setTabUrl] = useState(\"\");\n\tconst [loading, setLoading] = useState(true);\n\n\tconst getUrl = useCallback(() => {\n\t\tsetLoading(true);\n\t\tbrowser.tabs.query({ currentWindow: true, active: true }).then((tabs) => {\n\t\t\tconst x = new URL(tabs[0].url).hostname;\n\t\t\tconsole.log(x);\n\t\t\tsetTabUrl(x);\n\t\t});\n\t}, [setUrlData]);\n\n\tconst fetchApi = useCallback(async () => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tif (tabUrl === \"\") return;\n\t\t\tconst response = await fetch(`http://ip-api.com/json/${tabUrl}`);\n\t\t\tconst jsonResponse = await response.json();\n\t\t\tif (jsonResponse.status === \"fail\")\n\t\t\t\tthrow new Error(\"something went wrong\");\n\t\t\tsetUrlData(jsonResponse);\n\t\t} catch (err) {\n\t\t\tsetErrorMessage(err.message);\n\t\t}\n\t\tsetLoading(false);\n\t}, [tabUrl]);\n\tuseEffect(() => {\n\t\tgetUrl();\n\t}, [getUrl]);\n\tuseEffect(() => {\n\t\tfetchApi();\n\t}, [fetchApi]);\n\tconsole.log(\"red\");\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t{loading ? (\n\t\t\t\t<img src={loadingUrl} />\n\t\t\t) : (\n\t\t\t\t(\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p> country: {urlData.country}</p>\n\t\t\t\t\t\t<p> city: {urlData.city}</p>\n\t\t\t\t\t</>\n\t\t\t\t) ?? errorMessage\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n",{"ruleId":"17","severity":1,"message":"18","line":2,"column":10,"nodeType":"19","messageId":"20","endLine":2,"endColumn":13},{"ruleId":"21","severity":1,"message":"22","line":19,"column":5,"nodeType":"23","endLine":19,"endColumn":17,"suggestions":"24"},{"ruleId":"25","severity":1,"message":"26","line":45,"column":5,"nodeType":"27","endLine":45,"endColumn":29},"no-unused-vars","'url' is defined but never used.","Program","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'setUrlData'. Either exclude it or remove the dependency array.","ArrayExpression",["28"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"29","fix":"30"},"Update the dependencies array to be: []",{"range":"31","text":"32"},[575,587],"[]"]